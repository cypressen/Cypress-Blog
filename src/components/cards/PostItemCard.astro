---
import type { Post } from "@/lib/Interfaces";
type Props = {
  post: Post;
};
const {
  post: { data },
}: Props = Astro.props;
---

<div
  class="rounded-box card flex lg:flex-row lg:justify-between lg:items-start flex-col lg:w-full lg:h-64
  w-[90%] h-96 items-start mx-auto
  overflow-hidden group lg:my-8 my-3 shadow-xl hover:shadow-none transition-shadow duration-500"
>
  <div class="w-[90%] sm:w-3/5 order-2 lg:order-1">
    <div class="w-full h-full flex flex-col gap-2 p-3">
      <div class="p-2 font-extrabold text-2xl lg:text-4xl truncate">
        {data.title}
      </div>
      <div class="font-semibold text-xl text-gray-400 hidden lg:block truncate">
        {data.description}
      </div>
      <div class="flex gap-1">
        {
          data.categories &&
            data.categories.map((category) => (
              <div class="badge badge-neutral">{category}</div>
            ))
        }
      </div>
      <div>
        {
          data.pubDate.getFullYear() +
            "-" +
            (data.pubDate.getMonth() + 1) +
            "-" +
            data.pubDate.getDate() +
            "|" +
            data.pubDate.getHours() +
            ":" +
            data.pubDate.getMinutes() +
            ":" +
            data.pubDate.getSeconds()
        }
      </div>
    </div>
  </div>

  <div
    class="lg:h-full lg:w-2/5
   lg:order-2 h-2/3 w-full
  rounded-none order-1"
  >
    {
      data.cover && (
        <img
          class="object-cover w-full h-full rounded-r-box clip-diagonal transform overflow-hidden transition-transform duration-500 lg:group-hover:scale-125"
          src={data.cover}
          alt={data.title}
          width="0"
          height="0"
        />
      )
    }
  </div>
</div>

<style>
  @media (min-width: 1024px) {
    .clip-diagonal {
      clip-path: polygon(50% 0, 100% 0, 100% 100%, 0 100%);
    }
  }
</style>
